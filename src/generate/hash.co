crypto = require \crypto

opts =
  cock:
    algo: \sha1
    prefix: \SB:
    separator: \;
    transformCard: -> it.toLowerCase!
    transformDigest: -> parseInt(it.slice(0 10), 16).toString 32
  mws:
    algo: \md5
    prefix: \#
    separator: ''
    transformCard: -> it.toUpperCase!.replace /[^A-Z]/g ''
    transformDigest: -> it.slice 0 8

hash = (deck, opts) ->
  arr = for zone, cards in deck
    prefix = if zone is \side then opts.prefix else ''
    for card, n in cards
      s = prefix + opts.transformCard card
      while n--
        s
  data = arr.sort!.join opts.separator
  hash = crypto.createHash opts.algo .update data, \utf8
  digest = hash.digest \hex
  opts.transformDigest digest

module.exports = (deck) ->
  cock: hash deck, opts.cock
  mws:  hash deck, opts.mws
